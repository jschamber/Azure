{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "testjohn"
		},
		"AzureBatch1_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'AzureBatch1'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"linkedService1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linkedService1'"
		},
		"linkedService2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService2'"
		},
		"linkedService2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linkedService2'"
		},
		"AzureBatch1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "tetsjohn1"
		},
		"AzureBatch1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://tetsjohn1.canadacentral.batch.azure.com"
		},
		"linkedService1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ggi\\jschamber"
		},
		"linkedService2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ggi\\jschamber"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_hn3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "well"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{item().file_name}.parquet",
							"type": "Expression"
						},
						"folderPath": "test",
						"fileSystem": "simple"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_AzureSqlDB_Table1_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testjohndb_AzureSQL_Table1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hjgfjhgfjhgf",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Table1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_testjohn7_blobjson__test2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure_BlobStorage_testjohn7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test2",
						"container": "testjohn"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"col1": {
							"type": "string"
						},
						"col2": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_0s6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Source_SalesLT_Address",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "int"
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegion",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime"
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Address"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_testjohn7_blobcsv_Book1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure_BlobStorage_testjohn7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Book1.csv",
						"folderPath": "Data Factory/Data Factory",
						"container": "testjohn"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "col1",
						"type": "String"
					},
					{
						"name": "col2",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wellcompletion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "wellcompletion",
						"fileSystem": "well"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Well Name: Teine Energy Dodsland Hz 101/01A-03-030-23W3",
						"type": "String"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "String"
					},
					{
						"name": "Prop_5",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "Prop_8",
						"type": "String"
					},
					{
						"name": "Prop_9",
						"type": "String"
					},
					{
						"name": "Prop_10",
						"type": "String"
					},
					{
						"name": "Prop_11",
						"type": "String"
					},
					{
						"name": "Prop_12",
						"type": "String"
					},
					{
						"name": "Prop_13",
						"type": "String"
					},
					{
						"name": "Prop_14",
						"type": "String"
					},
					{
						"name": "Prop_15",
						"type": "String"
					},
					{
						"name": "Prop_16",
						"type": "String"
					},
					{
						"name": "Prop_17",
						"type": "String"
					},
					{
						"name": "Prop_18",
						"type": "String"
					},
					{
						"name": "Prop_19",
						"type": "String"
					},
					{
						"name": "Prop_20",
						"type": "String"
					},
					{
						"name": "Prop_21",
						"type": "String"
					},
					{
						"name": "Prop_22",
						"type": "String"
					},
					{
						"name": "Prop_23",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatch1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"accountName": "[parameters('AzureBatch1_properties_typeProperties_accountName')]",
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('AzureBatch1_accessKey')]"
					},
					"batchUri": "[parameters('AzureBatch1_properties_typeProperties_batchUri')]",
					"poolName": "mupool",
					"linkedServiceName": {
						"referenceName": "azure batch_AzureBlobStorage2",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]",
					"userName": "[parameters('linkedService1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linkedService1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime-selfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('linkedService2_connectionString')]",
					"userName": "[parameters('linkedService2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linkedService2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime-selfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BulkCopyfromDB_with_ControlTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy huge amount of data in bulk from database using external control table to store source table list with partitions for each table.\n\nWhen you want to migrate data from your data warehouse like Oracle server, Netezza server, Teradata server or SQL Server to Azure, you have to load huge amount of data from multiple tables in data sources. In most cases, data has to be further partitioned in each table so that you can load rows with multiple threads in parallel from single table.",
				"activities": [
					{
						"name": "GetPartitionList",
						"description": "Lookup activity to retrieve the list of partitions stored in the external control table.",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select @{pipeline().parameters.Control_Table_Schema_PartitionID} as PartitionID, @{pipeline().parameters.Control_Table_Schema_SourceTableName} as SourceTableName, @{pipeline().parameters.Control_Table_Schema_FilterQuery} as FilterQuery from @{pipeline().parameters.Control_Table_Name}",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "AzureSqlDatabaseExternal_ControlTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@pipeline().parameters.Control_Table_Name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachPartition",
						"description": "ForEach activity to get the partition list from Lookup activity and then iterate each of them to Copy activity. ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetPartitionList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetPartitionList').output.value",
								"type": "Expression"
							},
							"batchCount": 5,
							"activities": [
								{
									"name": "CopyOnePartition",
									"description": "Copy activity to copy each partition from source database store to destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "@item().FilterQuery",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "AzureSqlDatabaseDataSource",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureBlobStorageDataDestination",
											"type": "DatasetReference",
											"parameters": {
												"FolderPath": {
													"value": "@pipeline().parameters.Data_Destination_Folder_Path",
													"type": "Expression"
												},
												"FileName": {
													"value": "@concat('Partition_',item().PartitionID,'_',item().SourceTableName)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"Control_Table_Name": {
						"type": "String"
					},
					"Control_Table_Schema_PartitionID": {
						"type": "String"
					},
					"Control_Table_Schema_SourceTableName": {
						"type": "String"
					},
					"Control_Table_Schema_FilterQuery": {
						"type": "String"
					},
					"Data_Destination_Folder_Path": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_0s6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_0s6",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "SalesLT.Address"
							},
							{
								"name": "Destination",
								"value": "testjohn//sink_address_parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_0s6",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_0s6",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_0s6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Pipeline_blobsvc_AzureSql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy to Table1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "testjohn/Data Factory/Data Factory/Book1.csv"
							},
							{
								"name": "Destination",
								"value": "testjohn//test2"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "col1",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "col2",
											"type": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Source_testjohn7_blobcsv_Book1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sink_AzureSqlDB_Table1_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_testjohn7_blobcsv_Book1')]",
				"[concat(variables('factoryId'), '/datasets/Sink_AzureSqlDB_Table1_test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/merge wellcompletion csvs into one')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Well Name: Teine Energy Dodsland Hz 101/01A-03-030-23W3",
											"type": "String"
										},
										"sink": {
											"name": "Well Name: Teine Energy Dodsland Hz 101/01A-03-030-23W3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_1",
											"type": "String"
										},
										"sink": {
											"name": "Prop_1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_2",
											"type": "String"
										},
										"sink": {
											"name": "Prop_2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_3",
											"type": "String"
										},
										"sink": {
											"name": "Prop_3",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_4",
											"type": "String"
										},
										"sink": {
											"name": "Prop_4",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_5",
											"type": "String"
										},
										"sink": {
											"name": "Prop_5",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_6",
											"type": "String"
										},
										"sink": {
											"name": "Prop_6",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_7",
											"type": "String"
										},
										"sink": {
											"name": "Prop_7",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_8",
											"type": "String"
										},
										"sink": {
											"name": "Prop_8",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_9",
											"type": "String"
										},
										"sink": {
											"name": "Prop_9",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_10",
											"type": "String"
										},
										"sink": {
											"name": "Prop_10",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_11",
											"type": "String"
										},
										"sink": {
											"name": "Prop_11",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_12",
											"type": "String"
										},
										"sink": {
											"name": "Prop_12",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_13",
											"type": "String"
										},
										"sink": {
											"name": "Prop_13",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_14",
											"type": "String"
										},
										"sink": {
											"name": "Prop_14",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_15",
											"type": "String"
										},
										"sink": {
											"name": "Prop_15",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_16",
											"type": "String"
										},
										"sink": {
											"name": "Prop_16",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_17",
											"type": "String"
										},
										"sink": {
											"name": "Prop_17",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_18",
											"type": "String"
										},
										"sink": {
											"name": "Prop_18",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_19",
											"type": "String"
										},
										"sink": {
											"name": "Prop_19",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_20",
											"type": "String"
										},
										"sink": {
											"name": "Prop_20",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_21",
											"type": "String"
										},
										"sink": {
											"name": "Prop_21",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_22",
											"type": "String"
										},
										"sink": {
											"name": "Prop_22",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Prop_23",
											"type": "String"
										},
										"sink": {
											"name": "Prop_23",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wellcompletion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wellcompletion",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/wellcompletion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "cmd /c \"set AZ_BATCH & timeout /t 90 > NUL\"",
							"resourceLinkedService": {
								"referenceName": "azure batch_AzureBlobStorage2",
								"type": "LinkedServiceReference"
							},
							"folderPath": "raw",
							"referenceObjects": {
								"linkedServices": [],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBatch1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedService1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedService2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedService2')]"
			]
		}
	]
}